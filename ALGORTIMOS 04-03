#include <iostream>
#include "conio.h"
#define FIL 10
#define COL 10

using namespace std;

void cargar(int mat[FIL][COL], int n,int m){
	int i,j;
	cout<<"introduzca los elementos ";
	for(i=0;i<n;i++){
		for(j=0;j<m;j++){
			cin>>mat[i][j];
		}
	}
}

void mostrar(int mat[FIL][COL], int n,int m){
	int i,j;
	for(i=0;i<n;i++){
		for(j=0;j<m;j++){
			cout<<mat[i][j]<<" ";
		}
		cout<<endl;
	}
}

bool verifPrimo(int n){
	int i;
	bool k=true;
	for(i=2;i<n;i++){
		if(n%i==0){
			k=false;
		}
	}
	return(k);
}

void vecNoPrimos(int mat[FIL][COL],int n,int m,int vec[],int &k){
	int i,j;
	k=0;
	for(i=0;i<n;i++){
		for(j=0;j<m;j++){
			if(verifPrimo(mat[i][j])==false){
				vec[k]=mat[i][j];
				k++;
			}
		}
	}
}

void mostrarvec(int vec[],int n){
	int i;
	cout<<endl;
	for(i=0;i<n;i++){
		cout<<vec[i]<<" ";
	}
}

void elimRepetidos(int vec[],int &n){
	int i,j,k;
	for(i=0;i<n;i++){
		for(j=i+1;j<n;j++){
			if(vec[i]==vec[j]){
				for(k=j;k<n-1;k++){
					vec[k]=vec[k+1];
				}
				n--;
				i--;
			}			
		}
	}
}

void burbuja(int vec[],int n){
	int i,j,aux;
	for(i=0;i<n-1;i++){
		for(j=i+1;j<n;j++){
			if(vec[i]>vec[j]){
				aux=vec[i];
				vec[i]=vec[j];
				vec[j]=aux;
			}
		}
	}
}

void cargarEspiral(int mat[FIL][COL], int n, int m){
	int i,a,c=1;
	a=0;
	for(a=0;a<n/2;a++){
		for(i=a+1;i<n-a;i++){
			mat[a][i]=c++;
		}

int main(){
	int mat[FIL][COL],n,m,vec[30],nVec;
	cout<<"nro de filas? ";
	cin>>n;
	cout<<"nro de columnas? ";
	cin>>m;
	cargar(mat,n,m);
	mostrar(mat,n,m);
	vecNoPrimos(mat,n,m,vec,nVec);
	mostrarvec(vec,nVec);
	elimRepetidos(vec,nVec);
	mostrarvec(vec,nVec);
	burbuja(vec,nVec);
	mostrarvec(vec,nVec);
	getch();

	return 0;
}
